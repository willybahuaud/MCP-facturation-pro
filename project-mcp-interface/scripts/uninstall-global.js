#!/usr/bin/env node

import { existsSync, unlinkSync, readFileSync, writeFileSync } from 'fs';
import { join } from 'path';
import chalk from 'chalk';

console.log(chalk.blue.bold('üóëÔ∏è  D√©sinstallation du serveur MCP Facturation.PRO global\n'));

try {
  // 1. Supprimer le wrapper
  const wrapperPath = join(process.env.HOME, '.local', 'bin', 'facturation-pro-mcp-wrapper');
  if (existsSync(wrapperPath)) {
    unlinkSync(wrapperPath);
    console.log(chalk.green('‚úÖ Wrapper supprim√©'));
  } else {
    console.log(chalk.yellow('‚ö†Ô∏è  Wrapper non trouv√©'));
  }

  // 2. Mettre √† jour la configuration Cursor
  const mcpConfigPath = join(process.env.HOME, '.cursor', 'mcp.json');
  if (existsSync(mcpConfigPath)) {
    try {
      const mcpConfig = JSON.parse(readFileSync(mcpConfigPath, 'utf8'));
      
      if (mcpConfig.mcpServers && mcpConfig.mcpServers['facturation-pro']) {
        delete mcpConfig.mcpServers['facturation-pro'];
        
        // Si plus de serveurs, supprimer la cl√© mcpServers
        if (Object.keys(mcpConfig.mcpServers).length === 0) {
          delete mcpConfig.mcpServers;
        }
        
        writeFileSync(mcpConfigPath, JSON.stringify(mcpConfig, null, 2));
        console.log(chalk.green('‚úÖ Configuration Cursor mise √† jour'));
      } else {
        console.log(chalk.yellow('‚ö†Ô∏è  Configuration facturation-pro non trouv√©e'));
      }
    } catch (error) {
      console.log(chalk.yellow('‚ö†Ô∏è  Erreur lors de la lecture de la configuration Cursor'));
    }
  } else {
    console.log(chalk.yellow('‚ö†Ô∏è  Configuration Cursor non trouv√©e'));
  }

  console.log(chalk.green.bold('\n‚úÖ D√©sinstallation termin√©e !'));
  console.log(chalk.white('\nüìã N\'oubliez pas de :'));
  console.log(chalk.white('1. Red√©marrer Cursor'));
  console.log(chalk.white('2. V√©rifier que "facturation-pro" n\'appara√Æt plus dans les param√®tres MCP'));

} catch (error) {
  console.error(chalk.red.bold('\n‚ùå Erreur lors de la d√©sinstallation :'));
  console.error(chalk.red(error.message));
  process.exit(1);
}
